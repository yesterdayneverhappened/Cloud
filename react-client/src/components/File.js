import React, { useState, useRef, useEffect } from 'react';
import '../styles-for-compontnts/Project.css';

export default function File({ file, deleteFile, onOpenContextMenu }) {
  const [isMenuVisible, setIsMenuVisible] = useState(false);
  const menuRef = useRef(null);

  // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
  const toggleMenu = (e) => {
    e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ —Ç—Ä–æ–µ—Ç–æ—á–∏—é
    onOpenContextMenu();
    setIsMenuVisible(!isMenuVisible);
  };

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –Ω–µ–≥–æ
  const handleClickOutside = (e) => {
    if (menuRef.current && !menuRef.current.contains(e.target)) {
      setIsMenuVisible(false);
    }
  };

  useEffect(() => {
    document.addEventListener('click', handleClickOutside);
    return () => {
      document.removeEventListener('click', handleClickOutside);
    };
  }, []);

  // –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
  const handleMenuAction = (action) => {
    switch (action) {
      case 'info':
        alert(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ:\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${file.filename}\n–î–∞—Ç–∞: ${new Date(file.created_at).toLocaleString()}`);
        break;
      case 'rename':
        const newName = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è —Ñ–∞–π–ª–∞:', file.filename);
        if (newName) {
          alert(`–§–∞–π–ª –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤: ${newName}`);
        }
        break;
      case 'delete':
        deleteFile(file.id);
        break;
      case 'move':
        alert(`–§–∞–π–ª "${file.filename}" –ø–µ—Ä–µ–º–µ—â—ë–Ω`);
        break;
      case 'copy':
        alert(`–§–∞–π–ª "${file.filename}" —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω`);
        break;
      default:
        break;
    }
    setIsMenuVisible(false); // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è
  };

  return (
    <div className="file-card">
      <div className="file-content">
        <strong>{file.filename}</strong>
        <p>–ó–∞–≥—Ä—É–∂–µ–Ω–æ: {new Date(file.created_at).toLocaleString()}</p>
      </div>

      <div className="file-actions">
        {/* –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∞—Ç—å */}
        <button
          onClick={() => window.open(`http://localhost:5000/files/download/${file.id}`, '_blank')}
          className="download-button"
        >
          –°–∫–∞—á–∞—Ç—å
        </button>

        {/* –¢—Ä–æ–µ—Ç–æ—á–∏–µ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é */}
        <button className="menu-button" onClick={toggleMenu}>‚ãÆ</button>

        {/* –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é */}
        {isMenuVisible && (
          <div ref={menuRef} className="context-menu">
            <div onClick={() => handleMenuAction('info')}>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</div>
            <div onClick={() => handleMenuAction('rename')}>‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å</div>
            <div onClick={() => handleMenuAction('delete')}>‚ùå –£–¥–∞–ª–∏—Ç—å</div>
            <div onClick={() => handleMenuAction('move')}>üìÇ –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å</div>
            <div onClick={() => handleMenuAction('copy')}>üìÑ –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</div>
          </div>
        )}
      </div>
    </div>
  );
}
